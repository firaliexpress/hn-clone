{"version":3,"sources":["store/app/actions.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","store/story/selectors.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/style.js","components/Loader/index.js","styles/palette.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","components/App/index.js","styles/globals.js","registerServiceWorker.js","index.js"],"names":["actionTypes","SET_THEME","app","state","theme","type","payload","API_ROOT","process","URL","HEADERS","client","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","path","get","then","data","post","put","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","limit","begin","end","getPageService","storyPromises","items","slice","getPageValues","map","all","NS","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","story","isFetching","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","configureStore","initialState","createStore","reducer","hasMoreStoriesSelector","createSelector","length","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","border","Title","h3","text","Host","a","textSecondary","ExternalLink","Description","div","CommentLink","LINK_REL","ListItem","by","kids","score","title","time","site","link","userUrl","href","rel","target","format","Date","toISOString","ListWrapper","ul","backgroundSecondary","List","key","blink","keyframes","Animation","Loader","colorsDark","background","Wrapper","h1","App","props","fetchStoriesFirstPage","hasMoreStories","dataLength","next","hasMore","loader","style","height","overflow","Component","connect","GlobalStyles","createGlobalStyle","isLocalhost","Boolean","window","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","store","ReactDOM","render","document","getElementById","renderApp","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6aecb860.chunk.js","sourcesContent":["// @flow\r\nconst NS = '@hnReader/app';\r\n\r\nexport const actionTypes = {\r\n  SET_THEME: `${NS}/SET_THEME`\r\n};\r\n\r\nconst actions = {\r\n  setTheme: (payload = {}) => ({\r\n    type: actionTypes.SET_THEME,\r\n    payload\r\n  })\r\n};\r\n\r\nexport default actions;\r\n","// @flow\r\nimport { actionTypes } from './actions';\r\n\r\nconst getInitialState = () => ({\r\n  theme: 'dark'\r\n});\r\n\r\nconst app = (state = getInitialState(), { type, payload }) => {\r\nswitch (type) {\r\n  case actionTypes.SET_THEME:\r\n    return {\r\n      ...state,\r\n      ...payload\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default app;\r\n","// @flow\r\nimport axios from 'axios';\r\n\r\n// Default Api for you root\r\nconst API_ROOT = process.env.URL || 'http://localhost:3000';\r\nconst TIMEOUT = 2000;\r\nconst HEADERS = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json'\r\n};\r\n\r\nclass ApiService {\r\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\r\n    const client = axios.create({\r\n      baseURL,\r\n      timeout,\r\n      headers,\r\n      auth\r\n    })\r\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.client = client;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  get(path) {\r\n    return this.client.get(path).then(response => response.data);\r\n  }\r\n\r\n  post(path, payload) {\r\n    return this.client.post(path, payload).then(response => response.data);\r\n  }\r\n\r\n  put(path, payload) {\r\n    return this.client.put(path, payload).then(response => response.data);\r\n  }\r\n\r\n  path(path, payload) {\r\n    return this.client.path(path, payload).then(response => response.data);\r\n  }\r\n\r\n  delete(path) {\r\n    return this.client.delete(path).then(response => response.data);\r\n  }\r\n\r\n}\r\n\r\nexport default ApiService;\r\n","// @flow\r\n\r\nimport ApiService from './Api';\r\n\r\nconst JSON_QUERY = '.json?print=pretty';\r\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\r\nconst client = new ApiService({ baseURL: BASE_URL });\r\n\r\nconst hackerNewsApi = {};\r\nconst PAGE_LIMIT = 20;\r\n\r\nconst getPageService = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\r\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\r\n\r\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\r\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\r\nhackerNewsApi.getStoriesByPage = (ids, page) => {\r\n  const { begin, end } = getPageService(PAGE_LIMIT, page);\r\n  const activeIds = getPageValues({ begin, end, items: ids });\r\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\r\n  return Promise.all(storyPromises);\r\n};\r\n\r\n\r\nexport default hackerNewsApi;\r\n","// @flow\r\nimport hackerNewsApi from 'services/hackerNewsApi';\r\n\r\nconst NS = '@hnReader/story';\r\n\r\nexport const actionTypes = {\r\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\r\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\r\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\r\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\r\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\r\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\r\n};\r\n\r\nconst action = (type, payload) => ({ type, payload });\r\n\r\nconst actions = {\r\n  fetchStoryIds: (payload = {}) => {\r\n    return dispatch => {\r\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\r\n\r\n      return hackerNewsApi\r\n        .getTopStoryIds()\r\n        .then(storyIds => {\r\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\r\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\r\n          return storyIds;\r\n        })\r\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\r\n    };\r\n  },\r\n  fetchStories: (payload = {}) => {\r\n    return dispatch => {\r\n      const { storyIds, page } = payload;\r\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\r\n\r\n      return hackerNewsApi\r\n        .getStoriesByPage(storyIds, page)\r\n        .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\r\n        .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE), err));\r\n    };\r\n  }\r\n};\r\n\r\nexport default actions;","// @flow\r\nimport { actionTypes } from './actions';\r\n\r\nconst getInitialState = () => ({\r\n  storyIds: [],\r\n  stories: [],\r\n  page: 0,\r\n  isFetching: false,\r\n  error: ''\r\n});\r\n\r\nconst story = (state = getInitialState(), { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\r\n    case actionTypes.FETCH_STORIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          // isFetching: false\r\n        };\r\n    case actionTypes.FETCH_STORIES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          stories: [...state.stories, ...payload.stories],\r\n          page: state.page + 1,\r\n          isFetching: false\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default story;\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport app from './app/reducer';\r\nimport story from './story/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tapp,\r\n\tstory\r\n});\r\n\r\nexport default rootReducer;\r\n","// @flow\r\nimport { applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst isProd = process.env.NODE_ENV === 'production';\r\nconst middlewareList = [];\r\n\r\nmiddlewareList.push(thunk);\r\n\r\nif (!isProd) {\r\n\tmiddlewareList.push(createLogger());\r\n}\r\n\r\nconst middleware = compose(applyMiddleware(...middlewareList));\r\n\r\nexport default middleware;\r\n","// @flow\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport middleware from './middleware';\r\n\r\nconst configureStore = initialState => {\r\n\tconst store = createStore(reducer, initialState, middleware);\r\n\treturn store;\r\n};\r\n\r\nexport default configureStore;\r\n","// @flow\r\nimport { createSelector } from 'reselect';\r\n\r\nconst storyIdsSelector = state => state.story.storyIds;\r\nconst storiesSelector = state => state.story.stories;\r\n\r\nexport const hasMoreStoriesSelector = createSelector(\r\n  storyIdsSelector,\r\n  storiesSelector,\r\n  (storyIds, stories) => storyIds.length > stories.length,\r\n);\r\n","// @flow\r\nimport url from 'url';\r\n\r\nconst getSiteHostname = siteUrl => {\r\n  let hostname = '';\r\n\r\n  if (siteUrl) {\r\n    if (!siteUrl.includes('//')) {\r\n      siteUrl = `http://${siteUrl}`;\r\n    }\r\n    hostname = url.parse(siteUrl).hostname;\r\n  }\r\n\r\n  if (hostname.includes('www.')) {\r\n    hostname = hostname.split('www.')[1];\r\n  }\r\n\r\n  return hostname;\r\n\r\n};\r\n\r\nexport default getSiteHostname;\r\n","// @flow\r\nconst HN_ROOT = 'https://news.ycombinator.com';\r\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\r\nexport const HN_USER = `${HN_ROOT}/user?id=`;\r\n\r\nconst getArticleLink = ({ url, id }) => {\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const link = !!url ? url : commentUrl;\r\n  return link;\r\n};\r\n\r\nexport default getArticleLink;\r\n","// @flow\r\nimport styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n\tborder-bottom: 1px solid ${({ theme }) => theme.border};\r\n\tpadding: 14px 24px;\r\n\t\r\n\t&:last-child {\r\n\t\tborder-bottom: none;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n\tcolor: ${({ theme }) => theme.text};\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 6px;\r\n\tfont-weight: 400;\r\n\tfont-size: 16px;\r\n\tletter-spacing: 0.4px;\r\n`;\r\n\r\nexport const Host = styled.a`\r\n\tcolor: ${({ theme }) => theme.textSecondary};\r\n\tfont-size: 12px;\r\n\t&:hover {\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n\tcolor: ${({ theme }) => theme.text};\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\ttext-decoration: none;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n\tfont-size: 14px;\r\n\tcolor: ${({ theme }) => theme.textSecondary};\r\n`;\r\n\r\nexport const CommentLink = styled.a`\r\n\tcolor: ${({ theme }) => theme.textSecondary};\r\n\t&:visited {\r\n\t\tcolor: ${({ theme }) => theme.textSecondary};\r\n\t}\r\n`;\r\n","// @flow\r\nimport React from 'react';\r\nimport { format } from 'timeago.js';\r\nimport getSiteHostname from 'utils/getSiteHostname';\r\nimport getArticleLink, { HN_ITEM, HN_USER } from 'utils/getArticleLink';\r\nimport {\r\n  Item,\r\n  Title,\r\n  Host,\r\n  ExternalLink,\r\n  Description,\r\n  CommentLink\r\n} from './styles';\r\n\r\nconst LINK_REL = 'nofollow noreferrer noopener';\r\n\r\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\r\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\r\n  const link = getArticleLink({ url, id });\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const userUrl = `${HN_USER}${by}`;\r\n  return (\r\n    <Item>\r\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\r\n        <Title>\r\n          {title} <Host href={link} target=\"_blank\">({site})</Host>\r\n        </Title>\r\n      </ExternalLink>\r\n      <Description>\r\n        {score} point by{' '}\r\n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\r\n          {by}\r\n        </CommentLink>{' '}\r\n        {format(new Date(time * 1000).toISOString())} {' | '}\r\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\r\n          {kids.length} Comments\r\n        </CommentLink>\r\n      </Description>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ListItem;","// @flow\r\nimport styled from 'styled-components';\r\n\r\nexport const ListWrapper = styled.ul`\r\n\tbackground-color: ${({ theme }) => theme.backgroundSecondary};\r\n\tborder-radius: 4px;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tmargin-bottom: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n","// @flow\r\nimport React from 'react';\r\nimport ListItem from 'components/ListItem';\r\nimport { ListWrapper } from './styles';\r\n\r\nconst List = ({ stories }) => (\r\n  <ListWrapper>\r\n    {stories && stories.map(story => (\r\n      <ListItem key={story.id} {...story} />\r\n    ))}\r\n  </ListWrapper>\r\n);\r\n\r\nexport default List;\r\n","// @flow\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst blink = keyframes`\r\n  0% {\r\n    opacity: .2\r\n  }\r\n  20% {\r\n    opacity: 1\r\n  }\r\n  0% {\r\n    opacity: .2\r\n  }\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  text-align: center;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    font-size: 80px;\r\n    line-height: 0.1;\r\n    animation-name: ${blink};\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-fill-mode: both;\r\n  }\r\n\r\n  span:nth-child(2) {\r\n    animation-delay: 0.2s;\r\n  }\r\n\r\n  span:nth-child(3) {\r\n    animation-delay: 0.4s;\r\n  }\r\n\r\n`;","// @flow\r\nimport React from 'react';\r\n\r\nimport { Animation } from './style';\r\n\r\nconst Loader = () => (\r\n  <Animation>\r\n    <span>.</span>\r\n    <span>.</span>\r\n    <span>.</span>\r\n  </Animation>\r\n);\r\n\r\nexport default Loader; \r\n","// @flow\r\nexport const colorsDark = {\r\n\tbackground: '#272727',\r\n\tbackgroundSecondary: '#393C3E',\r\n\ttext: '#bfbebe',\r\n\ttextSecondary: '#848886',\r\n\tborder: '#272727'\r\n};\r\n\r\nexport const colorsLight = {\r\n\tbackground: '#eaeaea',\r\n\tbackgroundSecondary: '#f8f8f8',\r\n\ttext: '#848886',\r\n\ttextSecondary: '#aaaaaa',\r\n\tborder: '#eaeaea'\r\n};\r\n","// @flow\nimport styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n\twidth: 85%;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\theight: 100%;\n\toverflow: hidden;\n\tpadding-bottom: 200px;\n\t\n\t${tablet} {\n\t\twidth: 96%;\n\t}\n`;\n\nexport const Title = styled.h1`\n\tcolor: ${({ theme }) => theme.textSecondary};\n\tfont-size: 20px;\n\tfont-weight: 300;\n\tmargin-top: 24px;\n\tmargin-bottom: 26px;\n`;\n","// @flow\r\nexport const mobile = '@media only screen and (max-width: 480px)';\r\nexport const tablet = '@media only screen and (max-width: 768px)';\r\nexport const monitor = '@media only screen and (max-width: 1400px)';\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport List from 'components/List';\r\nimport Loader from 'components/Loader';\r\nimport { colorsDark } from 'styles/palette';\r\n\r\nimport { Wrapper, Title } from './styles';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStoriesFirstPage();\r\n  }\r\n\r\n  fetchStories = () => {\r\n    const { storyIds, page, fetchStories, isFetching } = this.props;\r\n    if (!isFetching) {\r\n      \r\n      fetchStories({ storyIds, page });\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { stories, hasMoreStories } = this.props;\r\n    return (\r\n      <ThemeProvider theme={colorsDark}>\r\n        <div>\r\n          <Wrapper>\r\n            <Title>\r\n              Hacker News Reader\r\n            </Title>\r\n            <InfiniteScroll\r\n              dataLength={stories.length}\r\n              next={this.fetchStories}\r\n              hasMore={hasMoreStories}\r\n              loader={<Loader />}\r\n              style={{\r\n                height: '100%',\r\n                overflow: 'visible'\r\n              }}\r\n            >\r\n              <List stories={stories} />\r\n            </InfiniteScroll>\r\n          </Wrapper>\r\n        </div>\r\n        {/*\r\n        <header className=\"App-header\">\r\n        \r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          \r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          \r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n          \r\n        </header>\r\n        */}\r\n\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;\r\n\r\n","// @flow\nimport { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selectors';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n\thasMoreStories: hasMoreStoriesSelector(state),\n\tstories: state.story.stories,\n\tpage: state.story.page,\n\tstoryIds: state.story.storyIds,\n\tisFetching: state.story.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n\tfetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page }))\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);\n","// @flow\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\t* {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\tbody {\r\n\t\tmargin: 0;\r\n\t\tfont-family: Lato, -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n\t\t\t\"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n\t\t\tsans-serif;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t}\r\n\tcode {\r\n\t\tfont-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n\t\t\tmonospace;\r\n\t}\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\t&:visited {\r\n\t\t\tcolor: inherit;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport App from './components/App';\nimport GlobalStyles from 'styles/globals.js';\n// import * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker'\n\nconst renderApp = () => {\n\t\n\tconst store = configureStore({});\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tconsole.log('Initial state ->');\n\t\t\tconsole.log(store.getState());\n\t}\n\t\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<GlobalStyles />\n\t\t\t<App />\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nregisterServiceWorker();\n"],"sourceRoot":""}